<% module_namespacing do -%>
class <%= controller_class_name %>Controller < ApplicationController
  before_action :set_<%= file_name %>, only: %i[show edit update destroy]

  def index
    @<%= plural_file_name %> = policy_scope(<%= class_name %>).page(params[:page])
    authorize @<%= plural_file_name %>
  end

  def show; end

  def new
    @<%= file_name %> = <%= orm_class.build(class_name) %>
    authorize @<%= file_name %>
    skip_policy_scope
  end

  def edit; end

  def create
    @<%= file_name %> = <%= orm_class.build(class_name, "#{file_name}_params") %>
    authorize @<%= file_name %>
    skip_policy_scope

    if @<%= file_name %>.save
      redirect_to @<%= file_name %>, notice: notice_message(<%= class_name %>)
    else
      render :new, status: :unprocessable_entity
    end
  end

  def update
    if @<%= file_name %>.update(<%= file_name %>_params)
      redirect_to @<%= file_name %>, notice: notice_message(<%= class_name %>)
    else
      render :edit, status: :unprocessable_entity
    end
  end

  def destroy
    @<%= file_name %>.destroy
    redirect_to <%= index_helper %>_url, notice: notice_message(<%= class_name %>)
  end

  private

  def set_<%= file_name %>
    @<%= file_name %> = policy_scope(<%= class_name %>).find(params[:id])
    authorize @<%= file_name %>
  end

  def <%= "#{file_name}_params" %>
    <%- if attributes_names.empty? -%>
    params.fetch(:<%= singular_table_name %>, {})
    <%- else -%>
    params.require(:<%= singular_table_name %>).permit(<%= permitted_params %>)
    <%- end -%>
  end
end
<% end -%>
