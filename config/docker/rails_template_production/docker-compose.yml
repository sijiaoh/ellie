version: "3"
services:
  db:
    container_name: rails_template_production_db
    image: postgres:15.4
    environment:
      POSTGRES_USER: rails_template
      POSTGRES_PASSWORD: ${RAILS_TEMPLATE_DATABASE_PASSWORD}
      POSTGRES_DB: rails_template_production
    volumes:
      - rails_template_production_db_data:/var/lib/postgresql
  app:
    container_name: rails_template_production
    image: rails_template_production
    build:
      context: ../../..
      dockerfile: ./config/docker/rails_template_production/Dockerfile
      args:
        - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
        - RAILS_TEMPLATE_DATABASE_PASSWORD=${RAILS_TEMPLATE_DATABASE_PASSWORD}
    environment:
      RAILS_ENV: production
      RAILS_SERVE_STATIC_FILES: "true"
      RAILS_TEMPLATE_DATABASE_HOST: db
      RAILS_TEMPLATE_DATABASE_PASSWORD: ${RAILS_TEMPLATE_DATABASE_PASSWORD}
      GA_MEASUREMENT_ID: ${GA_MEASUREMENT_ID}
    volumes:
      - rails_template_production_log_data:/app/log
    depends_on:
      - db
  https-portal:
    container_name: rails_template_production_https_portal
    image: steveltn/https-portal:1
    ports:
      - "80:80"
      - "443:443"
    links:
      - app
    restart: always
    environment:
      DOMAINS: "${DOMAIN} -> http://app:3000"
      STAGE: "production"
    volumes:
      - rails_template_production_https_portal_data:/var/lib/https-portal
volumes:
  rails_template_production_log_data:
  rails_template_production_db_data:
  rails_template_production_https_portal_data:
